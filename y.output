Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: PRINT expr ';'
    5     | declaration
    6     | declaration '=' expr ';'
    7     | VARIABLE '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | '{' stmt_list '}'

   12 stmt_list: stmt
   13          | stmt_list stmt

   14 declaration: INT_TYPE VARIABLE
   15            | INT_TYPE VARIABLE ';'
   16            | FLOAT_TYPE VARIABLE
   17            | FLOAT_TYPE VARIABLE ';'
   18            | STRING_TYPE VARIABLE
   19            | STRING_TYPE VARIABLE ';'
   20            | BOOL_TYPE VARIABLE
   21            | BOOL_TYPE VARIABLE ';'

   22 expr: INTEGER
   23     | FLOAT
   24     | STRING
   25     | BOOL
   26     | VARIABLE
   27     | '-' expr
   28     | expr '+' expr
   29     | expr '-' expr
   30     | expr '*' expr
   31     | expr '/' expr
   32     | expr '<' expr
   33     | expr '>' expr
   34     | expr GE expr
   35     | expr LE expr
   36     | expr NE expr
   37     | expr EQ expr
   38     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 38
')' (41) 8 9 10 38
'*' (42) 30
'+' (43) 28
'-' (45) 27 29
'/' (47) 31
';' (59) 4 6 7 15 17 19 21
'<' (60) 32
'=' (61) 6 7
'>' (62) 33
'{' (123) 11
'}' (125) 11
error (256)
INTEGER (258) 22
INT_TYPE (259) 14 15
FLOAT_TYPE (260) 16 17
STRING_TYPE (261) 18 19
BOOL_TYPE (262) 20 21
STRING (263) 24
FLOAT (264) 23
BOOL (265) 25
VARIABLE (266) 7 14 15 16 17 18 19 20 21 26
WHILE (267) 8
IF (268) 9 10
PRINT (269) 4
IFX (270)
ELSE (271) 10
GE (272) 34
LE (273) 35
EQ (274) 37
NE (275) 36
UMINUS (276)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
function (36)
    on left: 2 3, on right: 1 2
stmt (37)
    on left: 4 5 6 7 8 9 10 11, on right: 2 8 9 10 12 13
stmt_list (38)
    on left: 12 13, on right: 11 13
declaration (39)
    on left: 14 15 16 17 18 19 20 21, on right: 5 6
expr (40)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38, on right:
    4 6 7 8 9 10 27 28 29 30 31 32 33 34 35 36 37 38


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '{'          shift, and go to state 12

    $default  reduce using rule 1 (program)

    stmt         go to state 13
    declaration  go to state 14


State 3

    0 $accept: program $end .

    $default  accept


State 4

   14 declaration: INT_TYPE . VARIABLE
   15            | INT_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 15


State 5

   16 declaration: FLOAT_TYPE . VARIABLE
   17            | FLOAT_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 16


State 6

   18 declaration: STRING_TYPE . VARIABLE
   19            | STRING_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 17


State 7

   20 declaration: BOOL_TYPE . VARIABLE
   21            | BOOL_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 18


State 8

    7 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 19


State 9

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 20


State 10

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 21


State 11

    4 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 29


State 12

   11 stmt: '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '{'          shift, and go to state 12

    stmt         go to state 30
    stmt_list    go to state 31
    declaration  go to state 14


State 13

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 14

    5 stmt: declaration .
    6     | declaration . '=' expr ';'

    '='  shift, and go to state 32

    $default  reduce using rule 5 (stmt)


State 15

   14 declaration: INT_TYPE VARIABLE .
   15            | INT_TYPE VARIABLE . ';'

    ';'  shift, and go to state 33

    $default  reduce using rule 14 (declaration)


State 16

   16 declaration: FLOAT_TYPE VARIABLE .
   17            | FLOAT_TYPE VARIABLE . ';'

    ';'  shift, and go to state 34

    $default  reduce using rule 16 (declaration)


State 17

   18 declaration: STRING_TYPE VARIABLE .
   19            | STRING_TYPE VARIABLE . ';'

    ';'  shift, and go to state 35

    $default  reduce using rule 18 (declaration)


State 18

   20 declaration: BOOL_TYPE VARIABLE .
   21            | BOOL_TYPE VARIABLE . ';'

    ';'  shift, and go to state 36

    $default  reduce using rule 20 (declaration)


State 19

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 37


State 20

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 38


State 21

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 39


State 22

   22 expr: INTEGER .

    $default  reduce using rule 22 (expr)


State 23

   24 expr: STRING .

    $default  reduce using rule 24 (expr)


State 24

   23 expr: FLOAT .

    $default  reduce using rule 23 (expr)


State 25

   25 expr: BOOL .

    $default  reduce using rule 25 (expr)


State 26

   26 expr: VARIABLE .

    $default  reduce using rule 26 (expr)


State 27

   27 expr: '-' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 40


State 28

   38 expr: '(' . expr ')'

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 41


State 29

    4 stmt: PRINT expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    GE   shift, and go to state 42
    LE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 46
    '<'  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 52


State 30

   12 stmt_list: stmt .

    $default  reduce using rule 12 (stmt_list)


State 31

   11 stmt: '{' stmt_list . '}'
   13 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '{'          shift, and go to state 12
    '}'          shift, and go to state 53

    stmt         go to state 54
    declaration  go to state 14


State 32

    6 stmt: declaration '=' . expr ';'

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 55


State 33

   15 declaration: INT_TYPE VARIABLE ';' .

    $default  reduce using rule 15 (declaration)


State 34

   17 declaration: FLOAT_TYPE VARIABLE ';' .

    $default  reduce using rule 17 (declaration)


State 35

   19 declaration: STRING_TYPE VARIABLE ';' .

    $default  reduce using rule 19 (declaration)


State 36

   21 declaration: BOOL_TYPE VARIABLE ';' .

    $default  reduce using rule 21 (declaration)


State 37

    7 stmt: VARIABLE '=' expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    GE   shift, and go to state 42
    LE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 46
    '<'  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 56


State 38

    8 stmt: WHILE '(' expr . ')' stmt
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    GE   shift, and go to state 42
    LE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 46
    '<'  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 57


State 39

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    GE   shift, and go to state 42
    LE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 46
    '<'  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 58


State 40

   27 expr: '-' expr .
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 27 (expr)


State 41

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | '(' expr . ')'

    GE   shift, and go to state 42
    LE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 46
    '<'  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 59


State 42

   34 expr: expr GE . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 60


State 43

   35 expr: expr LE . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 61


State 44

   37 expr: expr EQ . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 62


State 45

   36 expr: expr NE . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 63


State 46

   33 expr: expr '>' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 64


State 47

   32 expr: expr '<' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 65


State 48

   28 expr: expr '+' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 66


State 49

   29 expr: expr '-' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 67


State 50

   30 expr: expr '*' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 68


State 51

   31 expr: expr '/' . expr

    INTEGER   shift, and go to state 22
    STRING    shift, and go to state 23
    FLOAT     shift, and go to state 24
    BOOL      shift, and go to state 25
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 27
    '('       shift, and go to state 28

    expr  go to state 69


State 52

    4 stmt: PRINT expr ';' .

    $default  reduce using rule 4 (stmt)


State 53

   11 stmt: '{' stmt_list '}' .

    $default  reduce using rule 11 (stmt)


State 54

   13 stmt_list: stmt_list stmt .

    $default  reduce using rule 13 (stmt_list)


State 55

    6 stmt: declaration '=' expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    GE   shift, and go to state 42
    LE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 46
    '<'  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 70


State 56

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 57

    8 stmt: WHILE '(' expr ')' . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '{'          shift, and go to state 12

    stmt         go to state 71
    declaration  go to state 14


State 58

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '{'          shift, and go to state 12

    stmt         go to state 72
    declaration  go to state 14


State 59

   38 expr: '(' expr ')' .

    $default  reduce using rule 38 (expr)


State 60

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   34     | expr GE expr .
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 34 (expr)


State 61

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   35     | expr LE expr .
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 35 (expr)


State 62

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   37     | expr EQ expr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 37 (expr)


State 63

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   36     | expr NE expr .
   37     | expr . EQ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 36 (expr)


State 64

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   33     | expr '>' expr .
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 33 (expr)


State 65

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   32     | expr '<' expr .
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 32 (expr)


State 66

   28 expr: expr . '+' expr
   28     | expr '+' expr .
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 28 (expr)


State 67

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   29     | expr '-' expr .
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 29 (expr)


State 68

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   30     | expr '*' expr .
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 30 (expr)


State 69

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   31     | expr '/' expr .
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 31 (expr)


State 70

    6 stmt: declaration '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 71

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 72

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 73

    $default  reduce using rule 9 (stmt)


State 73

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    '{'          shift, and go to state 12

    stmt         go to state 74
    declaration  go to state 14


State 74

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
