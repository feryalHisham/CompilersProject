Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: PRINT expr ';'
    5     | declaration ';'
    6     | declaration '=' expr ';'
    7     | VARIABLE '=' expr ';'
    8     | DO '{' stmt_list '}' WHILE '(' expr ')' ';'
    9     | FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'
   10     | WHILE '(' expr ')' '{' stmt_list '}'
   11     | IF '(' expr ')' '{' stmt_list '}'
   12     | IF '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   13     | '{' stmt_list '}'

   14 stmt_list: stmt
   15          | stmt_list stmt

   16 declaration: INT_TYPE VARIABLE
   17            | CONST INT_TYPE VARIABLE
   18            | FLOAT_TYPE VARIABLE
   19            | CONST FLOAT_TYPE VARIABLE
   20            | STRING_TYPE VARIABLE
   21            | CONST STRING_TYPE VARIABLE
   22            | BOOL_TYPE VARIABLE
   23            | CONST BOOL_TYPE VARIABLE

   24 expr: INTEGER
   25     | FLOAT
   26     | STRING
   27     | BOOL
   28     | VARIABLE
   29     | '-' expr
   30     | expr '+' expr
   31     | expr '-' expr
   32     | expr '*' expr
   33     | expr '/' expr
   34     | expr '<' expr
   35     | expr '>' expr
   36     | expr GE expr
   37     | expr LE expr
   38     | expr NE expr
   39     | expr EQ expr
   40     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 11 12 40
')' (41) 8 9 10 11 12 40
'*' (42) 32
'+' (43) 30
'-' (45) 29 31
'/' (47) 33
';' (59) 4 5 6 7 8 9
'<' (60) 34
'=' (61) 6 7 9
'>' (62) 35
'{' (123) 8 9 10 11 12 13
'}' (125) 8 9 10 11 12 13
error (256)
INTEGER (258) 24
INT_TYPE (259) 16 17
FLOAT_TYPE (260) 18 19
STRING_TYPE (261) 20 21
BOOL_TYPE (262) 22 23
STRING (263) 26
FLOAT (264) 25
BOOL (265) 27
VARIABLE (266) 7 9 16 17 18 19 20 21 22 23 28
WHILE (267) 8 10
IF (268) 11 12
PRINT (269) 4
CONST (270) 17 19 21 23
DO (271) 8
FOR (272) 9
IFX (273)
ELSE (274) 12
GE (275) 36
LE (276) 37
EQ (277) 39
NE (278) 38
UMINUS (279)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
function (39)
    on left: 2 3, on right: 1 2
stmt (40)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 14 15
stmt_list (41)
    on left: 14 15, on right: 8 9 10 11 12 13 15
declaration (42)
    on left: 16 17 18 19 20 21 22 23, on right: 5 6 9
expr (43)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40, on right:
    4 6 7 8 9 10 11 12 29 30 31 32 33 34 35 36 37 38 39 40


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    $default  reduce using rule 1 (program)

    stmt         go to state 16
    declaration  go to state 17


State 3

    0 $accept: program $end .

    $default  accept


State 4

   16 declaration: INT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 18


State 5

   18 declaration: FLOAT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 19


State 6

   20 declaration: STRING_TYPE . VARIABLE

    VARIABLE  shift, and go to state 20


State 7

   22 declaration: BOOL_TYPE . VARIABLE

    VARIABLE  shift, and go to state 21


State 8

    7 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 22


State 9

   10 stmt: WHILE . '(' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 23


State 10

   11 stmt: IF . '(' expr ')' '{' stmt_list '}'
   12     | IF . '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    '('  shift, and go to state 24


State 11

    4 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 32


State 12

   17 declaration: CONST . INT_TYPE VARIABLE
   19            | CONST . FLOAT_TYPE VARIABLE
   21            | CONST . STRING_TYPE VARIABLE
   23            | CONST . BOOL_TYPE VARIABLE

    INT_TYPE     shift, and go to state 33
    FLOAT_TYPE   shift, and go to state 34
    STRING_TYPE  shift, and go to state 35
    BOOL_TYPE    shift, and go to state 36


State 13

    8 stmt: DO . '{' stmt_list '}' WHILE '(' expr ')' ';'

    '{'  shift, and go to state 37


State 14

    9 stmt: FOR . '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 38


State 15

   13 stmt: '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt         go to state 39
    stmt_list    go to state 40
    declaration  go to state 17


State 16

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 17

    5 stmt: declaration . ';'
    6     | declaration . '=' expr ';'

    ';'  shift, and go to state 41
    '='  shift, and go to state 42


State 18

   16 declaration: INT_TYPE VARIABLE .

    $default  reduce using rule 16 (declaration)


State 19

   18 declaration: FLOAT_TYPE VARIABLE .

    $default  reduce using rule 18 (declaration)


State 20

   20 declaration: STRING_TYPE VARIABLE .

    $default  reduce using rule 20 (declaration)


State 21

   22 declaration: BOOL_TYPE VARIABLE .

    $default  reduce using rule 22 (declaration)


State 22

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 43


State 23

   10 stmt: WHILE '(' . expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 44


State 24

   11 stmt: IF '(' . expr ')' '{' stmt_list '}'
   12     | IF '(' . expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 45


State 25

   24 expr: INTEGER .

    $default  reduce using rule 24 (expr)


State 26

   26 expr: STRING .

    $default  reduce using rule 26 (expr)


State 27

   25 expr: FLOAT .

    $default  reduce using rule 25 (expr)


State 28

   27 expr: BOOL .

    $default  reduce using rule 27 (expr)


State 29

   28 expr: VARIABLE .

    $default  reduce using rule 28 (expr)


State 30

   29 expr: '-' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 46


State 31

   40 expr: '(' . expr ')'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 47


State 32

    4 stmt: PRINT expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 58


State 33

   17 declaration: CONST INT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 59


State 34

   19 declaration: CONST FLOAT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 60


State 35

   21 declaration: CONST STRING_TYPE . VARIABLE

    VARIABLE  shift, and go to state 61


State 36

   23 declaration: CONST BOOL_TYPE . VARIABLE

    VARIABLE  shift, and go to state 62


State 37

    8 stmt: DO '{' . stmt_list '}' WHILE '(' expr ')' ';'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt         go to state 39
    stmt_list    go to state 63
    declaration  go to state 17


State 38

    9 stmt: FOR '(' . declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    CONST        shift, and go to state 12

    declaration  go to state 64


State 39

   14 stmt_list: stmt .

    $default  reduce using rule 14 (stmt_list)


State 40

   13 stmt: '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 65

    stmt         go to state 66
    declaration  go to state 17


State 41

    5 stmt: declaration ';' .

    $default  reduce using rule 5 (stmt)


State 42

    6 stmt: declaration '=' . expr ';'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 67


State 43

    7 stmt: VARIABLE '=' expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 68


State 44

   10 stmt: WHILE '(' expr . ')' '{' stmt_list '}'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 69


State 45

   11 stmt: IF '(' expr . ')' '{' stmt_list '}'
   12     | IF '(' expr . ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 70


State 46

   29 expr: '-' expr .
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    $default  reduce using rule 29 (expr)


State 47

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr
   40     | '(' expr . ')'

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 71


State 48

   36 expr: expr GE . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 72


State 49

   37 expr: expr LE . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 73


State 50

   39 expr: expr EQ . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 74


State 51

   38 expr: expr NE . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 75


State 52

   35 expr: expr '>' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 76


State 53

   34 expr: expr '<' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 77


State 54

   30 expr: expr '+' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 78


State 55

   31 expr: expr '-' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 79


State 56

   32 expr: expr '*' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 80


State 57

   33 expr: expr '/' . expr

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 81


State 58

    4 stmt: PRINT expr ';' .

    $default  reduce using rule 4 (stmt)


State 59

   17 declaration: CONST INT_TYPE VARIABLE .

    $default  reduce using rule 17 (declaration)


State 60

   19 declaration: CONST FLOAT_TYPE VARIABLE .

    $default  reduce using rule 19 (declaration)


State 61

   21 declaration: CONST STRING_TYPE VARIABLE .

    $default  reduce using rule 21 (declaration)


State 62

   23 declaration: CONST BOOL_TYPE VARIABLE .

    $default  reduce using rule 23 (declaration)


State 63

    8 stmt: DO '{' stmt_list . '}' WHILE '(' expr ')' ';'
   15 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 82

    stmt         go to state 66
    declaration  go to state 17


State 64

    9 stmt: FOR '(' declaration . '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    '='  shift, and go to state 83


State 65

   13 stmt: '{' stmt_list '}' .

    $default  reduce using rule 13 (stmt)


State 66

   15 stmt_list: stmt_list stmt .

    $default  reduce using rule 15 (stmt_list)


State 67

    6 stmt: declaration '=' expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 84


State 68

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 69

   10 stmt: WHILE '(' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 85


State 70

   11 stmt: IF '(' expr ')' . '{' stmt_list '}'
   12     | IF '(' expr ')' . '{' stmt_list '}' ELSE '{' stmt_list '}'

    '{'  shift, and go to state 86


State 71

   40 expr: '(' expr ')' .

    $default  reduce using rule 40 (expr)


State 72

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   36     | expr GE expr .
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 36 (expr)


State 73

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   37     | expr LE expr .
   38     | expr . NE expr
   39     | expr . EQ expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 37 (expr)


State 74

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr
   39     | expr EQ expr .

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 39 (expr)


State 75

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   38     | expr NE expr .
   39     | expr . EQ expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 38 (expr)


State 76

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   35     | expr '>' expr .
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 35 (expr)


State 77

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   34     | expr '<' expr .
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 34 (expr)


State 78

   30 expr: expr . '+' expr
   30     | expr '+' expr .
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 30 (expr)


State 79

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   31     | expr '-' expr .
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 31 (expr)


State 80

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   32     | expr '*' expr .
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    $default  reduce using rule 32 (expr)


State 81

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   33     | expr '/' expr .
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    $default  reduce using rule 33 (expr)


State 82

    8 stmt: DO '{' stmt_list '}' . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 87


State 83

    9 stmt: FOR '(' declaration '=' . expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 88


State 84

    6 stmt: declaration '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 85

   10 stmt: WHILE '(' expr ')' '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt         go to state 39
    stmt_list    go to state 89
    declaration  go to state 17


State 86

   11 stmt: IF '(' expr ')' '{' . stmt_list '}'
   12     | IF '(' expr ')' '{' . stmt_list '}' ELSE '{' stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt         go to state 39
    stmt_list    go to state 90
    declaration  go to state 17


State 87

    8 stmt: DO '{' stmt_list '}' WHILE . '(' expr ')' ';'

    '('  shift, and go to state 91


State 88

    9 stmt: FOR '(' declaration '=' expr . ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 92


State 89

   10 stmt: WHILE '(' expr ')' '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 93

    stmt         go to state 66
    declaration  go to state 17


State 90

   11 stmt: IF '(' expr ')' '{' stmt_list . '}'
   12     | IF '(' expr ')' '{' stmt_list . '}' ELSE '{' stmt_list '}'
   15 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 94

    stmt         go to state 66
    declaration  go to state 17


State 91

    8 stmt: DO '{' stmt_list '}' WHILE '(' . expr ')' ';'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 95


State 92

    9 stmt: FOR '(' declaration '=' expr ';' . expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 96


State 93

   10 stmt: WHILE '(' expr ')' '{' stmt_list '}' .

    $default  reduce using rule 10 (stmt)


State 94

   11 stmt: IF '(' expr ')' '{' stmt_list '}' .
   12     | IF '(' expr ')' '{' stmt_list '}' . ELSE '{' stmt_list '}'

    ELSE  shift, and go to state 97

    $default  reduce using rule 11 (stmt)


State 95

    8 stmt: DO '{' stmt_list '}' WHILE '(' expr . ')' ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 98


State 96

    9 stmt: FOR '(' declaration '=' expr ';' expr . ';' VARIABLE '=' expr ')' '{' stmt_list '}'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 99


State 97

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE . '{' stmt_list '}'

    '{'  shift, and go to state 100


State 98

    8 stmt: DO '{' stmt_list '}' WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 101


State 99

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' . VARIABLE '=' expr ')' '{' stmt_list '}'

    VARIABLE  shift, and go to state 102


State 100

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt         go to state 39
    stmt_list    go to state 103
    declaration  go to state 17


State 101

    8 stmt: DO '{' stmt_list '}' WHILE '(' expr ')' ';' .

    $default  reduce using rule 8 (stmt)


State 102

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE . '=' expr ')' '{' stmt_list '}'

    '='  shift, and go to state 104


State 103

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 105

    stmt         go to state 66
    declaration  go to state 17


State 104

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' . expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 25
    STRING    shift, and go to state 26
    FLOAT     shift, and go to state 27
    BOOL      shift, and go to state 28
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 30
    '('       shift, and go to state 31

    expr  go to state 106


State 105

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


State 106

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr . ')' '{' stmt_list '}'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . GE expr
   37     | expr . LE expr
   38     | expr . NE expr
   39     | expr . EQ expr

    GE   shift, and go to state 48
    LE   shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    '>'  shift, and go to state 52
    '<'  shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 107


State 107

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 108


State 108

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15

    stmt         go to state 39
    stmt_list    go to state 109
    declaration  go to state 17


State 109

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    CONST        shift, and go to state 12
    DO           shift, and go to state 13
    FOR          shift, and go to state 14
    '{'          shift, and go to state 15
    '}'          shift, and go to state 110

    stmt         go to state 66
    declaration  go to state 17


State 110

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}' .

    $default  reduce using rule 9 (stmt)
