Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: PRINT expr ';'
    5     | declaration
    6     | declaration '=' expr ';'
    7     | VARIABLE '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | switch_stmt
   12     | '{' stmt_list '}'

   13 stmt_list: stmt
   14          | stmt_list stmt

   15 declaration: INT_TYPE VARIABLE
   16            | INT_TYPE VARIABLE ';'
   17            | FLOAT_TYPE VARIABLE
   18            | FLOAT_TYPE VARIABLE ';'
   19            | STRING_TYPE VARIABLE
   20            | STRING_TYPE VARIABLE ';'
   21            | BOOL_TYPE VARIABLE
   22            | BOOL_TYPE VARIABLE ';'

   23 switch_stmt: SWITCH '(' expr ')' '{' case_stmt default_stmt '}'

   24 case_stmt: CASE '(' expr ')' '{' stmt_list '}' case_stmt
   25          | CASE '(' expr ')' '{' stmt_list '}'

   26 default_stmt: DEFAULT '{' stmt '}'

   27 expr: INTEGER
   28     | FLOAT
   29     | STRING
   30     | BOOL
   31     | VARIABLE
   32     | '-' expr
   33     | expr '+' expr
   34     | expr '-' expr
   35     | expr '*' expr
   36     | expr '/' expr
   37     | expr '<' expr
   38     | expr '>' expr
   39     | expr GE expr
   40     | expr LE expr
   41     | expr NE expr
   42     | expr EQ expr
   43     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 23 24 25 43
')' (41) 8 9 10 23 24 25 43
'*' (42) 35
'+' (43) 33
'-' (45) 32 34
'/' (47) 36
';' (59) 4 6 7 16 18 20 22
'<' (60) 37
'=' (61) 6 7
'>' (62) 38
'{' (123) 12 23 24 25 26
'}' (125) 12 23 24 25 26
error (256)
INTEGER (258) 27
INT_TYPE (259) 15 16
FLOAT_TYPE (260) 17 18
STRING_TYPE (261) 19 20
BOOL_TYPE (262) 21 22
STRING (263) 29
FLOAT (264) 28
BOOL (265) 30
VARIABLE (266) 7 15 16 17 18 19 20 21 22 31
WHILE (267) 8
IF (268) 9 10
PRINT (269) 4
SWITCH (270) 23
CASE (271) 24 25
DEFAULT (272) 26
IFX (273)
ELSE (274) 10
GE (275) 39
LE (276) 40
EQ (277) 42
NE (278) 41
UMINUS (279)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
function (39)
    on left: 2 3, on right: 1 2
stmt (40)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 8 9 10 13 14 26
stmt_list (41)
    on left: 13 14, on right: 12 14 24 25
declaration (42)
    on left: 15 16 17 18 19 20 21 22, on right: 5 6
switch_stmt (43)
    on left: 23, on right: 11
case_stmt (44)
    on left: 24 25, on right: 23 24
default_stmt (45)
    on left: 26, on right: 23
expr (46)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43, on right:
    4 6 7 8 9 10 23 24 25 32 33 34 35 36 37 38 39 40 41 42 43


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    $default  reduce using rule 1 (program)

    stmt         go to state 14
    declaration  go to state 15
    switch_stmt  go to state 16


State 3

    0 $accept: program $end .

    $default  accept


State 4

   15 declaration: INT_TYPE . VARIABLE
   16            | INT_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 17


State 5

   17 declaration: FLOAT_TYPE . VARIABLE
   18            | FLOAT_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 18


State 6

   19 declaration: STRING_TYPE . VARIABLE
   20            | STRING_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 19


State 7

   21 declaration: BOOL_TYPE . VARIABLE
   22            | BOOL_TYPE . VARIABLE ';'

    VARIABLE  shift, and go to state 20


State 8

    7 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 21


State 9

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 22


State 10

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 23


State 11

    4 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 31


State 12

   23 switch_stmt: SWITCH . '(' expr ')' '{' case_stmt default_stmt '}'

    '('  shift, and go to state 32


State 13

   12 stmt: '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    stmt         go to state 33
    stmt_list    go to state 34
    declaration  go to state 15
    switch_stmt  go to state 16


State 14

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 15

    5 stmt: declaration .
    6     | declaration . '=' expr ';'

    '='  shift, and go to state 35

    $default  reduce using rule 5 (stmt)


State 16

   11 stmt: switch_stmt .

    $default  reduce using rule 11 (stmt)


State 17

   15 declaration: INT_TYPE VARIABLE .
   16            | INT_TYPE VARIABLE . ';'

    ';'  shift, and go to state 36

    $default  reduce using rule 15 (declaration)


State 18

   17 declaration: FLOAT_TYPE VARIABLE .
   18            | FLOAT_TYPE VARIABLE . ';'

    ';'  shift, and go to state 37

    $default  reduce using rule 17 (declaration)


State 19

   19 declaration: STRING_TYPE VARIABLE .
   20            | STRING_TYPE VARIABLE . ';'

    ';'  shift, and go to state 38

    $default  reduce using rule 19 (declaration)


State 20

   21 declaration: BOOL_TYPE VARIABLE .
   22            | BOOL_TYPE VARIABLE . ';'

    ';'  shift, and go to state 39

    $default  reduce using rule 21 (declaration)


State 21

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 40


State 22

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 41


State 23

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 42


State 24

   27 expr: INTEGER .

    $default  reduce using rule 27 (expr)


State 25

   29 expr: STRING .

    $default  reduce using rule 29 (expr)


State 26

   28 expr: FLOAT .

    $default  reduce using rule 28 (expr)


State 27

   30 expr: BOOL .

    $default  reduce using rule 30 (expr)


State 28

   31 expr: VARIABLE .

    $default  reduce using rule 31 (expr)


State 29

   32 expr: '-' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 43


State 30

   43 expr: '(' . expr ')'

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 44


State 31

    4 stmt: PRINT expr . ';'
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ';'  shift, and go to state 55


State 32

   23 switch_stmt: SWITCH '(' . expr ')' '{' case_stmt default_stmt '}'

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 56


State 33

   13 stmt_list: stmt .

    $default  reduce using rule 13 (stmt_list)


State 34

   12 stmt: '{' stmt_list . '}'
   14 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13
    '}'          shift, and go to state 57

    stmt         go to state 58
    declaration  go to state 15
    switch_stmt  go to state 16


State 35

    6 stmt: declaration '=' . expr ';'

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 59


State 36

   16 declaration: INT_TYPE VARIABLE ';' .

    $default  reduce using rule 16 (declaration)


State 37

   18 declaration: FLOAT_TYPE VARIABLE ';' .

    $default  reduce using rule 18 (declaration)


State 38

   20 declaration: STRING_TYPE VARIABLE ';' .

    $default  reduce using rule 20 (declaration)


State 39

   22 declaration: BOOL_TYPE VARIABLE ';' .

    $default  reduce using rule 22 (declaration)


State 40

    7 stmt: VARIABLE '=' expr . ';'
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ';'  shift, and go to state 60


State 41

    8 stmt: WHILE '(' expr . ')' stmt
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 61


State 42

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 62


State 43

   32 expr: '-' expr .
   33     | expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    $default  reduce using rule 32 (expr)


State 44

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr
   43     | '(' expr . ')'

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 63


State 45

   39 expr: expr GE . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 64


State 46

   40 expr: expr LE . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 65


State 47

   42 expr: expr EQ . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 66


State 48

   41 expr: expr NE . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 67


State 49

   38 expr: expr '>' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 68


State 50

   37 expr: expr '<' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 69


State 51

   33 expr: expr '+' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 70


State 52

   34 expr: expr '-' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 71


State 53

   35 expr: expr '*' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 72


State 54

   36 expr: expr '/' . expr

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 73


State 55

    4 stmt: PRINT expr ';' .

    $default  reduce using rule 4 (stmt)


State 56

   23 switch_stmt: SWITCH '(' expr . ')' '{' case_stmt default_stmt '}'
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 74


State 57

   12 stmt: '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


State 58

   14 stmt_list: stmt_list stmt .

    $default  reduce using rule 14 (stmt_list)


State 59

    6 stmt: declaration '=' expr . ';'
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ';'  shift, and go to state 75


State 60

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 61

    8 stmt: WHILE '(' expr ')' . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    stmt         go to state 76
    declaration  go to state 15
    switch_stmt  go to state 16


State 62

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    stmt         go to state 77
    declaration  go to state 15
    switch_stmt  go to state 16


State 63

   43 expr: '(' expr ')' .

    $default  reduce using rule 43 (expr)


State 64

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   39     | expr GE expr .
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 39 (expr)


State 65

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   40     | expr LE expr .
   41     | expr . NE expr
   42     | expr . EQ expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 40 (expr)


State 66

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr
   42     | expr EQ expr .

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 42 (expr)


State 67

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   41     | expr NE expr .
   42     | expr . EQ expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 41 (expr)


State 68

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   38     | expr '>' expr .
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 38 (expr)


State 69

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   37     | expr '<' expr .
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 37 (expr)


State 70

   33 expr: expr . '+' expr
   33     | expr '+' expr .
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 33 (expr)


State 71

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   34     | expr '-' expr .
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 34 (expr)


State 72

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   35     | expr '*' expr .
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    $default  reduce using rule 35 (expr)


State 73

   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   36     | expr '/' expr .
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    $default  reduce using rule 36 (expr)


State 74

   23 switch_stmt: SWITCH '(' expr ')' . '{' case_stmt default_stmt '}'

    '{'  shift, and go to state 78


State 75

    6 stmt: declaration '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 76

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 77

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 79

    $default  reduce using rule 9 (stmt)


State 78

   23 switch_stmt: SWITCH '(' expr ')' '{' . case_stmt default_stmt '}'

    CASE  shift, and go to state 80

    case_stmt  go to state 81


State 79

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    stmt         go to state 82
    declaration  go to state 15
    switch_stmt  go to state 16


State 80

   24 case_stmt: CASE . '(' expr ')' '{' stmt_list '}' case_stmt
   25          | CASE . '(' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 83


State 81

   23 switch_stmt: SWITCH '(' expr ')' '{' case_stmt . default_stmt '}'

    DEFAULT  shift, and go to state 84

    default_stmt  go to state 85


State 82

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 83

   24 case_stmt: CASE '(' . expr ')' '{' stmt_list '}' case_stmt
   25          | CASE '(' . expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 24
    STRING    shift, and go to state 25
    FLOAT     shift, and go to state 26
    BOOL      shift, and go to state 27
    VARIABLE  shift, and go to state 28
    '-'       shift, and go to state 29
    '('       shift, and go to state 30

    expr  go to state 86


State 84

   26 default_stmt: DEFAULT . '{' stmt '}'

    '{'  shift, and go to state 87


State 85

   23 switch_stmt: SWITCH '(' expr ')' '{' case_stmt default_stmt . '}'

    '}'  shift, and go to state 88


State 86

   24 case_stmt: CASE '(' expr . ')' '{' stmt_list '}' case_stmt
   25          | CASE '(' expr . ')' '{' stmt_list '}'
   33 expr: expr . '+' expr
   34     | expr . '-' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . GE expr
   40     | expr . LE expr
   41     | expr . NE expr
   42     | expr . EQ expr

    GE   shift, and go to state 45
    LE   shift, and go to state 46
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    '>'  shift, and go to state 49
    '<'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 89


State 87

   26 default_stmt: DEFAULT '{' . stmt '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    stmt         go to state 90
    declaration  go to state 15
    switch_stmt  go to state 16


State 88

   23 switch_stmt: SWITCH '(' expr ')' '{' case_stmt default_stmt '}' .

    $default  reduce using rule 23 (switch_stmt)


State 89

   24 case_stmt: CASE '(' expr ')' . '{' stmt_list '}' case_stmt
   25          | CASE '(' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 91


State 90

   26 default_stmt: DEFAULT '{' stmt . '}'

    '}'  shift, and go to state 92


State 91

   24 case_stmt: CASE '(' expr ')' '{' . stmt_list '}' case_stmt
   25          | CASE '(' expr ')' '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13

    stmt         go to state 33
    stmt_list    go to state 93
    declaration  go to state 15
    switch_stmt  go to state 16


State 92

   26 default_stmt: DEFAULT '{' stmt '}' .

    $default  reduce using rule 26 (default_stmt)


State 93

   14 stmt_list: stmt_list . stmt
   24 case_stmt: CASE '(' expr ')' '{' stmt_list . '}' case_stmt
   25          | CASE '(' expr ')' '{' stmt_list . '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    '{'          shift, and go to state 13
    '}'          shift, and go to state 94

    stmt         go to state 58
    declaration  go to state 15
    switch_stmt  go to state 16


State 94

   24 case_stmt: CASE '(' expr ')' '{' stmt_list '}' . case_stmt
   25          | CASE '(' expr ')' '{' stmt_list '}' .

    CASE  shift, and go to state 80

    $default  reduce using rule 25 (case_stmt)

    case_stmt  go to state 95


State 95

   24 case_stmt: CASE '(' expr ')' '{' stmt_list '}' case_stmt .

    $default  reduce using rule 24 (case_stmt)
