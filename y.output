Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: PRINT expr ';'
    5     | declaration ';'
    6     | declaration '=' expr ';'
    7     | VARIABLE '=' expr ';'
    8     | DO '{' stmt_list '}' WHILE '(' expr ')' ';'
    9     | FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'
   10     | WHILE '(' expr ')' '{' stmt_list '}'
   11     | IF '(' expr ')' '{' stmt_list '}'
   12     | IF '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   13     | switch_stmt
   14     | '{' stmt_list '}'

   15 stmt_list: stmt
   16          | stmt_list stmt

   17 declaration: INT_TYPE VARIABLE
   18            | CONST INT_TYPE VARIABLE
   19            | FLOAT_TYPE VARIABLE
   20            | CONST FLOAT_TYPE VARIABLE
   21            | STRING_TYPE VARIABLE
   22            | CONST STRING_TYPE VARIABLE
   23            | BOOL_TYPE VARIABLE
   24            | CONST BOOL_TYPE VARIABLE

   25 expr: INTEGER
   26     | FLOAT
   27     | STRING
   28     | BOOL
   29     | VARIABLE
   30     | '-' expr
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '*' expr
   34     | expr '/' expr
   35     | expr '<' expr
   36     | expr '>' expr
   37     | expr GE expr
   38     | expr LE expr
   39     | expr NE expr
   40     | expr EQ expr
   41     | '(' expr ')'

   42 switch_stmt: SWITCH '(' expr ')' '{' case_stmt default_stmt '}'

   43 case_stmt: CASE '(' expr ')' '{' stmt_list '}' case_stmt
   44          | CASE '(' expr ')' '{' stmt_list '}'

   45 default_stmt: DEFAULT '{' stmt_list '}'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 11 12 41 42 43 44
')' (41) 8 9 10 11 12 41 42 43 44
'*' (42) 33
'+' (43) 31
'-' (45) 30 32
'/' (47) 34
';' (59) 4 5 6 7 8 9
'<' (60) 35
'=' (61) 6 7 9
'>' (62) 36
'{' (123) 8 9 10 11 12 14 42 43 44 45
'}' (125) 8 9 10 11 12 14 42 43 44 45
error (256)
INTEGER (258) 25
INT_TYPE (259) 17 18
FLOAT_TYPE (260) 19 20
STRING_TYPE (261) 21 22
BOOL_TYPE (262) 23 24
STRING (263) 27
FLOAT (264) 26
BOOL (265) 28
VARIABLE (266) 7 9 17 18 19 20 21 22 23 24 29
WHILE (267) 8 10
IF (268) 11 12
PRINT (269) 4
SWITCH (270) 42
CASE (271) 43 44
DEFAULT (272) 45
CONST (273) 18 20 22 24
DO (274) 8
FOR (275) 9
IFX (276)
ELSE (277) 12
GE (278) 37
LE (279) 38
EQ (280) 40
NE (281) 39
UMINUS (282)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
function (42)
    on left: 2 3, on right: 1 2
stmt (43)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 15 16
stmt_list (44)
    on left: 15 16, on right: 8 9 10 11 12 14 16 43 44 45
declaration (45)
    on left: 17 18 19 20 21 22 23 24, on right: 5 6 9
expr (46)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    4 6 7 8 9 10 11 12 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
switch_stmt (47)
    on left: 42, on right: 13
case_stmt (48)
    on left: 43 44, on right: 42 43
default_stmt (49)
    on left: 45, on right: 42


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    $default  reduce using rule 1 (program)

    stmt         go to state 17
    declaration  go to state 18
    switch_stmt  go to state 19


State 3

    0 $accept: program $end .

    $default  accept


State 4

   17 declaration: INT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 20


State 5

   19 declaration: FLOAT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 21


State 6

   21 declaration: STRING_TYPE . VARIABLE

    VARIABLE  shift, and go to state 22


State 7

   23 declaration: BOOL_TYPE . VARIABLE

    VARIABLE  shift, and go to state 23


State 8

    7 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 24


State 9

   10 stmt: WHILE . '(' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 25


State 10

   11 stmt: IF . '(' expr ')' '{' stmt_list '}'
   12     | IF . '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    '('  shift, and go to state 26


State 11

    4 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 34


State 12

   42 switch_stmt: SWITCH . '(' expr ')' '{' case_stmt default_stmt '}'

    '('  shift, and go to state 35


State 13

   18 declaration: CONST . INT_TYPE VARIABLE
   20            | CONST . FLOAT_TYPE VARIABLE
   22            | CONST . STRING_TYPE VARIABLE
   24            | CONST . BOOL_TYPE VARIABLE

    INT_TYPE     shift, and go to state 36
    FLOAT_TYPE   shift, and go to state 37
    STRING_TYPE  shift, and go to state 38
    BOOL_TYPE    shift, and go to state 39


State 14

    8 stmt: DO . '{' stmt_list '}' WHILE '(' expr ')' ';'

    '{'  shift, and go to state 40


State 15

    9 stmt: FOR . '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 41


State 16

   14 stmt: '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 43
    declaration  go to state 18
    switch_stmt  go to state 19


State 17

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 18

    5 stmt: declaration . ';'
    6     | declaration . '=' expr ';'

    ';'  shift, and go to state 44
    '='  shift, and go to state 45


State 19

   13 stmt: switch_stmt .

    $default  reduce using rule 13 (stmt)


State 20

   17 declaration: INT_TYPE VARIABLE .

    $default  reduce using rule 17 (declaration)


State 21

   19 declaration: FLOAT_TYPE VARIABLE .

    $default  reduce using rule 19 (declaration)


State 22

   21 declaration: STRING_TYPE VARIABLE .

    $default  reduce using rule 21 (declaration)


State 23

   23 declaration: BOOL_TYPE VARIABLE .

    $default  reduce using rule 23 (declaration)


State 24

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 46


State 25

   10 stmt: WHILE '(' . expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 47


State 26

   11 stmt: IF '(' . expr ')' '{' stmt_list '}'
   12     | IF '(' . expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 48


State 27

   25 expr: INTEGER .

    $default  reduce using rule 25 (expr)


State 28

   27 expr: STRING .

    $default  reduce using rule 27 (expr)


State 29

   26 expr: FLOAT .

    $default  reduce using rule 26 (expr)


State 30

   28 expr: BOOL .

    $default  reduce using rule 28 (expr)


State 31

   29 expr: VARIABLE .

    $default  reduce using rule 29 (expr)


State 32

   30 expr: '-' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 49


State 33

   41 expr: '(' . expr ')'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 50


State 34

    4 stmt: PRINT expr . ';'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ';'  shift, and go to state 61


State 35

   42 switch_stmt: SWITCH '(' . expr ')' '{' case_stmt default_stmt '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 62


State 36

   18 declaration: CONST INT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 63


State 37

   20 declaration: CONST FLOAT_TYPE . VARIABLE

    VARIABLE  shift, and go to state 64


State 38

   22 declaration: CONST STRING_TYPE . VARIABLE

    VARIABLE  shift, and go to state 65


State 39

   24 declaration: CONST BOOL_TYPE . VARIABLE

    VARIABLE  shift, and go to state 66


State 40

    8 stmt: DO '{' . stmt_list '}' WHILE '(' expr ')' ';'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 67
    declaration  go to state 18
    switch_stmt  go to state 19


State 41

    9 stmt: FOR '(' . declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    CONST        shift, and go to state 13

    declaration  go to state 68


State 42

   15 stmt_list: stmt .

    $default  reduce using rule 15 (stmt_list)


State 43

   14 stmt: '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 69

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 44

    5 stmt: declaration ';' .

    $default  reduce using rule 5 (stmt)


State 45

    6 stmt: declaration '=' . expr ';'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 71


State 46

    7 stmt: VARIABLE '=' expr . ';'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ';'  shift, and go to state 72


State 47

   10 stmt: WHILE '(' expr . ')' '{' stmt_list '}'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 73


State 48

   11 stmt: IF '(' expr . ')' '{' stmt_list '}'
   12     | IF '(' expr . ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 74


State 49

   30 expr: '-' expr .
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    $default  reduce using rule 30 (expr)


State 50

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr
   41     | '(' expr . ')'

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 75


State 51

   37 expr: expr GE . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 76


State 52

   38 expr: expr LE . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 77


State 53

   40 expr: expr EQ . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 78


State 54

   39 expr: expr NE . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 79


State 55

   36 expr: expr '>' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 80


State 56

   35 expr: expr '<' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 81


State 57

   31 expr: expr '+' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 82


State 58

   32 expr: expr '-' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 83


State 59

   33 expr: expr '*' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 84


State 60

   34 expr: expr '/' . expr

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 85


State 61

    4 stmt: PRINT expr ';' .

    $default  reduce using rule 4 (stmt)


State 62

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr
   42 switch_stmt: SWITCH '(' expr . ')' '{' case_stmt default_stmt '}'

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 86


State 63

   18 declaration: CONST INT_TYPE VARIABLE .

    $default  reduce using rule 18 (declaration)


State 64

   20 declaration: CONST FLOAT_TYPE VARIABLE .

    $default  reduce using rule 20 (declaration)


State 65

   22 declaration: CONST STRING_TYPE VARIABLE .

    $default  reduce using rule 22 (declaration)


State 66

   24 declaration: CONST BOOL_TYPE VARIABLE .

    $default  reduce using rule 24 (declaration)


State 67

    8 stmt: DO '{' stmt_list . '}' WHILE '(' expr ')' ';'
   16 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 87

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 68

    9 stmt: FOR '(' declaration . '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    '='  shift, and go to state 88


State 69

   14 stmt: '{' stmt_list '}' .

    $default  reduce using rule 14 (stmt)


State 70

   16 stmt_list: stmt_list stmt .

    $default  reduce using rule 16 (stmt_list)


State 71

    6 stmt: declaration '=' expr . ';'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ';'  shift, and go to state 89


State 72

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 73

   10 stmt: WHILE '(' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 90


State 74

   11 stmt: IF '(' expr ')' . '{' stmt_list '}'
   12     | IF '(' expr ')' . '{' stmt_list '}' ELSE '{' stmt_list '}'

    '{'  shift, and go to state 91


State 75

   41 expr: '(' expr ')' .

    $default  reduce using rule 41 (expr)


State 76

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   37     | expr GE expr .
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 37 (expr)


State 77

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . NE expr
   40     | expr . EQ expr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 38 (expr)


State 78

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr
   40     | expr EQ expr .

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 40 (expr)


State 79

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   39     | expr NE expr .
   40     | expr . EQ expr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 39 (expr)


State 80

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   36     | expr '>' expr .
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 36 (expr)


State 81

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   35     | expr '<' expr .
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 35 (expr)


State 82

   31 expr: expr . '+' expr
   31     | expr '+' expr .
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 31 (expr)


State 83

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 32 (expr)


State 84

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   33     | expr '*' expr .
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    $default  reduce using rule 33 (expr)


State 85

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   34     | expr '/' expr .
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    $default  reduce using rule 34 (expr)


State 86

   42 switch_stmt: SWITCH '(' expr ')' . '{' case_stmt default_stmt '}'

    '{'  shift, and go to state 92


State 87

    8 stmt: DO '{' stmt_list '}' . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 93


State 88

    9 stmt: FOR '(' declaration '=' . expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 94


State 89

    6 stmt: declaration '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 90

   10 stmt: WHILE '(' expr ')' '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 95
    declaration  go to state 18
    switch_stmt  go to state 19


State 91

   11 stmt: IF '(' expr ')' '{' . stmt_list '}'
   12     | IF '(' expr ')' '{' . stmt_list '}' ELSE '{' stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 96
    declaration  go to state 18
    switch_stmt  go to state 19


State 92

   42 switch_stmt: SWITCH '(' expr ')' '{' . case_stmt default_stmt '}'

    CASE  shift, and go to state 97

    case_stmt  go to state 98


State 93

    8 stmt: DO '{' stmt_list '}' WHILE . '(' expr ')' ';'

    '('  shift, and go to state 99


State 94

    9 stmt: FOR '(' declaration '=' expr . ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ';'  shift, and go to state 100


State 95

   10 stmt: WHILE '(' expr ')' '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 101

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 96

   11 stmt: IF '(' expr ')' '{' stmt_list . '}'
   12     | IF '(' expr ')' '{' stmt_list . '}' ELSE '{' stmt_list '}'
   16 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 102

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 97

   43 case_stmt: CASE . '(' expr ')' '{' stmt_list '}' case_stmt
   44          | CASE . '(' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 103


State 98

   42 switch_stmt: SWITCH '(' expr ')' '{' case_stmt . default_stmt '}'

    DEFAULT  shift, and go to state 104

    default_stmt  go to state 105


State 99

    8 stmt: DO '{' stmt_list '}' WHILE '(' . expr ')' ';'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 106


State 100

    9 stmt: FOR '(' declaration '=' expr ';' . expr ';' VARIABLE '=' expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 107


State 101

   10 stmt: WHILE '(' expr ')' '{' stmt_list '}' .

    $default  reduce using rule 10 (stmt)


State 102

   11 stmt: IF '(' expr ')' '{' stmt_list '}' .
   12     | IF '(' expr ')' '{' stmt_list '}' . ELSE '{' stmt_list '}'

    ELSE  shift, and go to state 108

    $default  reduce using rule 11 (stmt)


State 103

   43 case_stmt: CASE '(' . expr ')' '{' stmt_list '}' case_stmt
   44          | CASE '(' . expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 109


State 104

   45 default_stmt: DEFAULT . '{' stmt_list '}'

    '{'  shift, and go to state 110


State 105

   42 switch_stmt: SWITCH '(' expr ')' '{' case_stmt default_stmt . '}'

    '}'  shift, and go to state 111


State 106

    8 stmt: DO '{' stmt_list '}' WHILE '(' expr . ')' ';'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 112


State 107

    9 stmt: FOR '(' declaration '=' expr ';' expr . ';' VARIABLE '=' expr ')' '{' stmt_list '}'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ';'  shift, and go to state 113


State 108

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE . '{' stmt_list '}'

    '{'  shift, and go to state 114


State 109

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr
   43 case_stmt: CASE '(' expr . ')' '{' stmt_list '}' case_stmt
   44          | CASE '(' expr . ')' '{' stmt_list '}'

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 115


State 110

   45 default_stmt: DEFAULT '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 116
    declaration  go to state 18
    switch_stmt  go to state 19


State 111

   42 switch_stmt: SWITCH '(' expr ')' '{' case_stmt default_stmt '}' .

    $default  reduce using rule 42 (switch_stmt)


State 112

    8 stmt: DO '{' stmt_list '}' WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 117


State 113

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' . VARIABLE '=' expr ')' '{' stmt_list '}'

    VARIABLE  shift, and go to state 118


State 114

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 119
    declaration  go to state 18
    switch_stmt  go to state 19


State 115

   43 case_stmt: CASE '(' expr ')' . '{' stmt_list '}' case_stmt
   44          | CASE '(' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 120


State 116

   16 stmt_list: stmt_list . stmt
   45 default_stmt: DEFAULT '{' stmt_list . '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 121

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 117

    8 stmt: DO '{' stmt_list '}' WHILE '(' expr ')' ';' .

    $default  reduce using rule 8 (stmt)


State 118

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE . '=' expr ')' '{' stmt_list '}'

    '='  shift, and go to state 122


State 119

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 123

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 120

   43 case_stmt: CASE '(' expr ')' '{' . stmt_list '}' case_stmt
   44          | CASE '(' expr ')' '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 124
    declaration  go to state 18
    switch_stmt  go to state 19


State 121

   45 default_stmt: DEFAULT '{' stmt_list '}' .

    $default  reduce using rule 45 (default_stmt)


State 122

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' . expr ')' '{' stmt_list '}'

    INTEGER   shift, and go to state 27
    STRING    shift, and go to state 28
    FLOAT     shift, and go to state 29
    BOOL      shift, and go to state 30
    VARIABLE  shift, and go to state 31
    '-'       shift, and go to state 32
    '('       shift, and go to state 33

    expr  go to state 125


State 123

   12 stmt: IF '(' expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


State 124

   16 stmt_list: stmt_list . stmt
   43 case_stmt: CASE '(' expr ')' '{' stmt_list . '}' case_stmt
   44          | CASE '(' expr ')' '{' stmt_list . '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 126

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 125

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr . ')' '{' stmt_list '}'
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . GE expr
   38     | expr . LE expr
   39     | expr . NE expr
   40     | expr . EQ expr

    GE   shift, and go to state 51
    LE   shift, and go to state 52
    EQ   shift, and go to state 53
    NE   shift, and go to state 54
    '>'  shift, and go to state 55
    '<'  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    ')'  shift, and go to state 127


State 126

   43 case_stmt: CASE '(' expr ')' '{' stmt_list '}' . case_stmt
   44          | CASE '(' expr ')' '{' stmt_list '}' .

    CASE  shift, and go to state 97

    $default  reduce using rule 44 (case_stmt)

    case_stmt  go to state 128


State 127

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 129


State 128

   43 case_stmt: CASE '(' expr ')' '{' stmt_list '}' case_stmt .

    $default  reduce using rule 43 (case_stmt)


State 129

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' . stmt_list '}'

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16

    stmt         go to state 42
    stmt_list    go to state 130
    declaration  go to state 18
    switch_stmt  go to state 19


State 130

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INT_TYPE     shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 5
    STRING_TYPE  shift, and go to state 6
    BOOL_TYPE    shift, and go to state 7
    VARIABLE     shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONST        shift, and go to state 13
    DO           shift, and go to state 14
    FOR          shift, and go to state 15
    '{'          shift, and go to state 16
    '}'          shift, and go to state 131

    stmt         go to state 70
    declaration  go to state 18
    switch_stmt  go to state 19


State 131

    9 stmt: FOR '(' declaration '=' expr ';' expr ';' VARIABLE '=' expr ')' '{' stmt_list '}' .

    $default  reduce using rule 9 (stmt)
